include "application.base.conf"

# these environment variables have to be defined
# https://ubirch.atlassian.net/wiki/display/UBD/ubirch+Docker+Env+Vars
# * SERVICE_IP
# ** IP adresse service should bind to, e.g. 127.0.0.1 or 0.0.0.0
# * SERVICE_PORT
# ** port which service should use, e.g. 8080
# * ENVID
# ** environment id (e.g. ubirch-demo, ubirch-prod, ...)
# * GO_PIPELINE_NAME_AUTH
# * GO_PIPELINE_LABEL_AUTH
# * GO_REVISION_AUTH
# * AKKA_ACTOR_TIMEOUT
# ** timeout of Akka Actors in seconds
# * AKKA_NUMBER_OF_WORKERS
# ** number of Akka Actor workers
# * REDIS_HOST
# ** Redis host url
# * REDIS_PORT
# ** port Redis is listening on
# * REDIS_PASSWORD
# ** optional password for Redis
# * UBIRCH_USERSERVICE_URL
# ** url of ubirch-users-service, e.g. https://1.2.3.4:8080

akka {
  loglevel = INFO
}

rediscala {
  loglevel = "INFO"
  rediscala-client-worker-dispatcher {
    mailbox-type = "akka.dispatch.SingleConsumerOnlyUnboundedMailbox"
    # Throughput defines the maximum number of messages to be
    # processed per actor before the thread jumps to the next actor.
    # Set to 1 for as fair as possible.
    throughput = 512
  }
}

ubirchAuthService {

  interface = ${SERVICE_IP}
  port = ${SERVICE_PORT}

  akka {
    actorTimeout = 90
    actorTimeout = ${?AKKA_ACTOR_TIMEOUT} // seconds
    numberOfWorkers = 2
    numberOfWorkers = ${?AKKA_NUMBER_OF_WORKERS}
  }

}

ubirch {

  envid = ${ENVID}

  oidcUtils {
    redis {
      updateExpiry = 1800 // seconds (30 minutes)
    }
  }

  redisUtil {
    host = ${REDIS_HOST}
    port = ${REDIS_PORT}
    password = ${?REDIS_PASSWORD}
  }

}

ubirchUserService.client.rest.host = ${UBIRCH_USERSERVICE_URL}
