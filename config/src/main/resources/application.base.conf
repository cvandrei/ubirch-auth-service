akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  loglevel = DEBUG
  http {
    verbose-error-messages = off
    server {
      idle-timeout = 90s
      request-timeout = 60s
      remote-address-header = on
      # The value of the `Server` header to produce.
      # Set to the empty string to disable rendering of the server header.
      server-header = ubirch-auth-service
    }
  }
}

rediscala {
  loglevel = "DEBUG"
  stdout-loglevel = "ON"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  rediscala-client-worker-dispatcher {
    mailbox-type = "akka.dispatch.SingleConsumerOnlyUnboundedMailbox"
    # Throughput defines the maximum number of messages to be
    # processed per actor before the thread jumps to the next actor.
    # Set to 1 for as fair as possible.
    throughput = 512
  }
}

ubirchAuthService {

  interface = "localhost"
  port = 8091
  timeout = 15 // seconds

  gopipelinename = "noName"
  gopipelinename = ${?GO_PIPELINE_NAME}
  gopipelinelabel = "noLabel"
  gopipelinelabel = ${?GO_PIPELINE_LABEL}
  gopipelinerev = "noRev"
  gopipelinerev = ${?GO_REVISION_GIT}

  akka {
    actorTimeout = 15 // seconds
    numberOfWorkers = 10
  }

  openIdConnect {
    state.ttl = 30000 // seconds (5 minutes)
    token.ttl = 30000 // seconds (5 minutes)
  }

  testUser {
    token = "token-12345678"
    providerId = "google"
    userId = "1234"
    context = "ubirch-local"
    name = "test-user-local"
    locale = "en"
  }

}

ubirch {

  oidcUtils {
    redis {
      updateExpiry = 1800 // seconds (30 minutes)
    }
  }

  redisUtil {
    host = localhost
    //host = r.dev.ubirch.com
    port = 6379
    //passwort = "lfDuSIKuSvIBnSA0SrXQhl51BAtQ6e9oJh4W5VSjiEM="
  }
}

ubirchUserService {
  mongo {

    hosts = "mongodb://localhost:27017/user-service?sslEnabled=false&authSource=admin"

    collection {
      context = "context"
      user = "user"
      group = "group"
    }

  }
}

mongo-async-driver {
  akka {
    loggers = ["akka.event.slf4j.Slf4jLogger"]
    loglevel = INFO
  }
}
